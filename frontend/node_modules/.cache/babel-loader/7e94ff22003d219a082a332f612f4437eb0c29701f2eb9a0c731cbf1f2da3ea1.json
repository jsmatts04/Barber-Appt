{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joel Mathew\\\\Desktop\\\\barber-appt\\\\frontend\\\\src\\\\components\\\\ScheduleAppt\\\\ScheduleAppt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ScheduleAppt.css';\nimport { Link } from 'react-router-dom'; // Import Link\nimport Navbar from \"../Navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ScheduleAppt = () => {\n  _s();\n  const [fullName, setFullName] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleFullNameChange = event => {\n    setFullName(event.target.value);\n  };\n  const handleDateChange = event => {\n    setSelectedDate(event.target.value);\n  };\n  const handleTimeChange = event => {\n    setSelectedTime(event.target.value);\n  };\n  const handleScheduleAppointment = () => {\n    setFormSubmitted(true);\n\n    // Check if the form is valid\n    const currentDate = new Date();\n    const endOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n\n    // Convert selected date to a Date object\n    const selectedDateObj = new Date(selectedDate);\n\n    // Extract hours and minutes from the selected time\n    const [hours, minutes] = selectedTime.split(\":\");\n    const selectedTimeObj = new Date();\n    selectedTimeObj.setHours(parseInt(hours, 10));\n    selectedTimeObj.setMinutes(parseInt(minutes, 10));\n\n    // Combine selected date and time\n    selectedDateObj.setHours(selectedTimeObj.getHours());\n    selectedDateObj.setMinutes(selectedTimeObj.getMinutes());\n    if (selectedDateObj < currentDate || selectedDateObj > endOfMonth || selectedTimeObj < new Date(\"2000-01-01T10:00:00\") || selectedTimeObj > new Date(\"2000-01-01T18:00:00\")) {\n      // Invalid form, do not proceed\n      return;\n    }\n\n    // Handle scheduling appointment logic here\n    console.log(\"Scheduled appointment:\", fullName, selectedDateObj, selectedTimeObj);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"S-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointment-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"appointment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sign-up-heading\",\n            children: \"Schedule Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"paragraph\",\n            children: \"Schedule an appointment today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              placeholder: \"Full Name\",\n              value: fullName,\n              onChange: handleFullNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"date\",\n              placeholder: \"Date\",\n              value: selectedDate,\n              onChange: handleDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), formSubmitted &&\n            // Show error if form submitted and date is invalid\n            (new Date(selectedDate) < new Date() || new Date(selectedDate) > new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: \"Please select a date between today and the end of the current month.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"time\",\n              placeholder: \"Time\",\n              value: selectedTime,\n              onChange: handleTimeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), formSubmitted &&\n            // Show error if form submitted and time is invalid\n            (new Date(`2000-01-01 ${selectedTime}`) < new Date(\"2000-01-01T10:00:00\") || new Date(`2000-01-01 ${selectedTime}`) > new Date(\"2000-01-01T18:00:00\")) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: \"Please select a time between 10:00 AM and 6:00 PM.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleScheduleAppointment,\n            children: \"Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 JSM's Chop Shop. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ScheduleAppt, \"xtak9NMwNVD7lUuVPx3YB+tNuOA=\");\n_c = ScheduleAppt;\nvar _c;\n$RefreshReg$(_c, \"ScheduleAppt\");","map":{"version":3,"names":["React","useState","Link","Navbar","jsxDEV","_jsxDEV","ScheduleAppt","_s","fullName","setFullName","selectedDate","setSelectedDate","selectedTime","setSelectedTime","formSubmitted","setFormSubmitted","handleFullNameChange","event","target","value","handleDateChange","handleTimeChange","handleScheduleAppointment","currentDate","Date","endOfMonth","getFullYear","getMonth","selectedDateObj","hours","minutes","split","selectedTimeObj","setHours","parseInt","setMinutes","getHours","getMinutes","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","required","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Joel Mathew/Desktop/barber-appt/frontend/src/components/ScheduleAppt/ScheduleAppt.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ScheduleAppt.css';\r\nimport { Link } from 'react-router-dom'; // Import Link\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\nexport const ScheduleAppt = () => {\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n\r\n  const handleFullNameChange = (event) => {\r\n    setFullName(event.target.value);\r\n  };\r\n\r\n  const handleDateChange = (event) => {\r\n    setSelectedDate(event.target.value);\r\n  };\r\n\r\n  const handleTimeChange = (event) => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleScheduleAppointment = () => {\r\n    setFormSubmitted(true);\r\n\r\n    // Check if the form is valid\r\n    const currentDate = new Date();\r\n    const endOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\r\n\r\n    // Convert selected date to a Date object\r\n    const selectedDateObj = new Date(selectedDate);\r\n\r\n    // Extract hours and minutes from the selected time\r\n    const [hours, minutes] = selectedTime.split(\":\");\r\n    const selectedTimeObj = new Date();\r\n    selectedTimeObj.setHours(parseInt(hours, 10));\r\n    selectedTimeObj.setMinutes(parseInt(minutes, 10));\r\n\r\n    // Combine selected date and time\r\n    selectedDateObj.setHours(selectedTimeObj.getHours());\r\n    selectedDateObj.setMinutes(selectedTimeObj.getMinutes());\r\n\r\n    if (\r\n      selectedDateObj < currentDate ||\r\n      selectedDateObj > endOfMonth ||\r\n      selectedTimeObj < new Date(\"2000-01-01T10:00:00\") ||\r\n      selectedTimeObj > new Date(\"2000-01-01T18:00:00\")\r\n    ) {\r\n      // Invalid form, do not proceed\r\n      return;\r\n    }\r\n\r\n    // Handle scheduling appointment logic here\r\n    console.log(\"Scheduled appointment:\", fullName, selectedDateObj, selectedTimeObj);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"S-container\">\r\n        <div className=\"appointment-container\">\r\n          <form className=\"appointment-form\">\r\n            <p className=\"sign-up-heading\">Schedule Appointment</p>\r\n            <p className=\"paragraph\">Schedule an appointment today</p>\r\n            <div className=\"input-group\">\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Full Name\"\r\n                value={fullName}\r\n                onChange={handleFullNameChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <input\r\n                required\r\n                type=\"date\"\r\n                placeholder=\"Date\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              />\r\n              {formSubmitted && ( // Show error if form submitted and date is invalid\r\n                (new Date(selectedDate) < new Date() ||\r\n                  new Date(selectedDate) > new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)) && (\r\n                  <p className=\"error-message\">Please select a date between today and the end of the current month.</p>\r\n                )\r\n              )}\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <input\r\n                required\r\n                type=\"time\"\r\n                placeholder=\"Time\"\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n              />\r\n              {formSubmitted && ( // Show error if form submitted and time is invalid\r\n                (new Date(`2000-01-01 ${selectedTime}`) < new Date(\"2000-01-01T10:00:00\") ||\r\n                  new Date(`2000-01-01 ${selectedTime}`) > new Date(\"2000-01-01T18:00:00\")) && (\r\n                  <p className=\"error-message\">Please select a time between 10:00 AM and 6:00 PM.</p>\r\n                )\r\n              )}\r\n            </div>\r\n            <button type=\"button\" onClick={handleScheduleAppointment}>\r\n              Schedule\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <p>&copy; 2024 JSM's Chop Shop. All rights reserved.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}