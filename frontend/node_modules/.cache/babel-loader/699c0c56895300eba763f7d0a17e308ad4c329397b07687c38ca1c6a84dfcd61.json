{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joel Mathew\\\\Desktop\\\\barber-appt\\\\frontend\\\\src\\\\components\\\\Navbar\\\\Navbar.js\";\nimport React from \"react\";\nimport LoggedOutNavbar from \"./LoggedOutNavbar\";\nimport LoggedInNavbar from \"./LoggedInNavbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = () => {\n      this.setState({\n        isLoggedIn: false\n      });\n    };\n    this.state = {\n      isLoggedIn: false // assuming initially user is not logged in\n    };\n  }\n  render() {\n    const {\n      isLoggedIn\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(LoggedInNavbar, {\n        handleLogout: this.handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LoggedOutNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Navbar;","map":{"version":3,"names":["React","LoggedOutNavbar","LoggedInNavbar","jsxDEV","_jsxDEV","Navbar","Component","constructor","props","handleLogout","setState","isLoggedIn","state","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Joel Mathew/Desktop/barber-appt/frontend/src/components/Navbar/Navbar.js"],"sourcesContent":["import React from \"react\";\r\nimport LoggedOutNavbar from \"./LoggedOutNavbar\";\r\nimport LoggedInNavbar from \"./LoggedInNavbar\";\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false // assuming initially user is not logged in\r\n    };\r\n  }\r\n\r\n  handleLogout = () => {\r\n    this.setState({ isLoggedIn: false });\r\n  };\r\n\r\n  render() {\r\n    const { isLoggedIn } = this.state;\r\n\r\n    return (\r\n      <nav>\r\n        {isLoggedIn ? (\r\n          <LoggedInNavbar handleLogout={this.handleLogout} />\r\n        ) : (\r\n          <LoggedOutNavbar />\r\n        )}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,SAASL,KAAK,CAACM,SAAS,CAAC;EACnCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,YAAY,GAAG,MAAM;MACnB,IAAI,CAACC,QAAQ,CAAC;QAAEC,UAAU,EAAE;MAAM,CAAC,CAAC;IACtC,CAAC;IAPC,IAAI,CAACC,KAAK,GAAG;MACXD,UAAU,EAAE,KAAK,CAAC;IACpB,CAAC;EACH;EAMAE,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEF;IAAW,CAAC,GAAG,IAAI,CAACC,KAAK;IAEjC,oBACER,OAAA;MAAAU,QAAA,EACGH,UAAU,gBACTP,OAAA,CAACF,cAAc;QAACO,YAAY,EAAE,IAAI,CAACA;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEnDd,OAAA,CAACH,eAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACnB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;AACF;AAEA,eAAeb,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}